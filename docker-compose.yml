version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: gotext-postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./server/internal/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Go API server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: gotext-server
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./server:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: go run cmd/server/main.go

  # React frontend
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: gotext-client
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    command: npm start

volumes:
  postgres-data: 